$date
	Thu Aug 27 16:56:55 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " carry $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$scope module a1 $end
$var wire 4 % a [3:0] $end
$var wire 4 & b [3:0] $end
$var wire 4 ' sum [3:0] $end
$var wire 1 " carry $end
$var wire 1 ( c2 $end
$var wire 1 ) c1 $end
$var wire 1 * c0 $end
$scope module f1 $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 - cin $end
$var wire 1 * cout $end
$var wire 1 . sum $end
$var wire 1 / s $end
$var wire 1 0 c $end
$scope module half_adder $end
$var wire 1 + a $end
$var wire 1 , b $end
$var wire 1 0 carry $end
$var wire 1 / sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 3 sum $end
$var wire 1 4 s $end
$var wire 1 5 c $end
$scope module half_adder $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 5 carry $end
$var wire 1 4 sum $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 ) cin $end
$var wire 1 ( cout $end
$var wire 1 8 sum $end
$var wire 1 9 s $end
$var wire 1 : c $end
$scope module half_adder $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 : carry $end
$var wire 1 9 sum $end
$upscope $end
$upscope $end
$scope module f4 $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 ( cin $end
$var wire 1 " cout $end
$var wire 1 = sum $end
$var wire 1 > s $end
$var wire 1 ? c $end
$scope module half_adder $end
$var wire 1 ; a $end
$var wire 1 < b $end
$var wire 1 ? carry $end
$var wire 1 > sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
b0 '
b0 &
b0 %
b0 $
b0 #
0"
b0 !
$end
#10
1.
13
18
b1111 !
b1111 '
1=
1/
14
19
1>
1,
12
17
1<
b1111 $
b1111 &
#30
0.
b1010 !
b1010 '
08
0/
09
0,
07
b1010 $
b1010 &
#60
1"
0=
1(
1)
03
b0 !
b0 '
08
1*
19
10
1,
17
1+
b1111 $
b1111 &
b1 #
b1 %
#100
13
18
b1110 !
b1110 '
1=
04
15
09
1:
0>
1?
11
16
1;
b1111 #
b1111 %
#150
18
1.
0*
0(
13
0)
b1111 !
b1111 '
1=
0"
1/
00
19
0:
14
05
1>
0?
0,
07
01
0;
b1010 $
b1010 &
b101 #
b101 %
#210
02
17
11
06
b1100 $
b1100 &
b11 #
b11 %
#280
08
b11 !
b11 '
0=
1"
09
0>
1?
1,
12
07
0+
01
1;
b1011 $
b1011 &
b1000 #
b1000 %
#360
